(declare-fun flag () String)
(assert (= flag "TSGLIVE{H4ve_y0u_tried_trie_ba5ed_encryp7ion?}")) ; It will sat when you put correct flag.

(declare-datatype A (
	(a (b A) (c A))
	(d)
))

(declare-datatype B (
	(e (f Bool) (g B))
	(h)
))

(define-fun-rec i ((u A) (v B)) A
	(match v (
		((h) (a d d))
		((e b c) (
			match u (
				((a j k) (ite b (
					a (i j c) k
				) (
					a j (i k c)
				)))
				((d) (ite b (
					a (i d c) d
				) (
					a d (i d c)
				)))
			)
		))
	))
)

(define-fun-rec l ((u A) (w String)) Bool 
	(match u (
		((a j k) (exists
			((m String) (n String)) 
			(and (= w (str.++ "(" m n ")"))
			(and (l j m) (l k n)))))
		(d (= w "()"))
	))
)

(define-fun-rec o ((u Int) (v B)) B
	(ite (= u 0)
		v
		(e (= 1 (mod u 2)) (e (= u 1) (o (div u 2) v)))
	)
)

(define-fun-rec p ((u Int) (x Int)) B
	(o u (o x h))
)

(define-fun s ((y String)) Int (ite (= " " y) 32 (ite (= "!" y) 33 (ite (= """" y) 34 (ite (= "#" y) 35 (ite (= "$" y) 36 (ite (= "%" y) 37 (ite (= "&" y) 38 (ite (= "'" y) 39 (ite (= "(" y) 40 (ite (= ")" y) 41 (ite (= "*" y) 42 (ite (= "+" y) 43 (ite (= "," y) 44 (ite (= "-" y) 45 (ite (= "." y) 46 (ite (= "/" y) 47 (ite (= "0" y) 48 (ite (= "1" y) 49 (ite (= "2" y) 50 (ite (= "3" y) 51 (ite (= "4" y) 52 (ite (= "5" y) 53 (ite (= "6" y) 54 (ite (= "7" y) 55 (ite (= "8" y) 56 (ite (= "9" y) 57 (ite (= ":" y) 58 (ite (= ";" y) 59 (ite (= "<" y) 60 (ite (= "=" y) 61 (ite (= ">" y) 62 (ite (= "?" y) 63 (ite (= "@" y) 64 (ite (= "A" y) 65 (ite (= "B" y) 66 (ite (= "C" y) 67 (ite (= "D" y) 68 (ite (= "E" y) 69 (ite (= "F" y) 70 (ite (= "G" y) 71 (ite (= "H" y) 72 (ite (= "I" y) 73 (ite (= "J" y) 74 (ite (= "K" y) 75 (ite (= "L" y) 76 (ite (= "M" y) 77 (ite (= "N" y) 78 (ite (= "O" y) 79 (ite (= "P" y) 80 (ite (= "Q" y) 81 (ite (= "R" y) 82 (ite (= "S" y) 83 (ite (= "T" y) 84 (ite (= "U" y) 85 (ite (= "V" y) 86 (ite (= "W" y) 87 (ite (= "X" y) 88 (ite (= "Y" y) 89 (ite (= "Z" y) 90 (ite (= "[" y) 91 (ite (= "\" y) 92 (ite (= "]" y) 93 (ite (= "^" y) 94 (ite (= "_" y) 95 (ite (= "`" y) 96 (ite (= "a" y) 97 (ite (= "b" y) 98 (ite (= "c" y) 99 (ite (= "d" y) 100 (ite (= "e" y) 101 (ite (= "f" y) 102 (ite (= "g" y) 103 (ite (= "h" y) 104 (ite (= "i" y) 105 (ite (= "j" y) 106 (ite (= "k" y) 107 (ite (= "l" y) 108 (ite (= "m" y) 109 (ite (= "n" y) 110 (ite (= "o" y) 111 (ite (= "p" y) 112 (ite (= "q" y) 113 (ite (= "r" y) 114 (ite (= "s" y) 115 (ite (= "t" y) 116 (ite (= "u" y) 117 (ite (= "v" y) 118 (ite (= "w" y) 119 (ite (= "x" y) 120 (ite (= "y" y) 121 (ite (= "z" y) 122 (ite (= "{" y) 123 (ite (= "|" y) 124 (ite (= "}" y) 125 (ite (= "~" y) 126 -1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(define-fun-rec q ((y String) (z Int) (t A)) A (
	ite (< z 0) t
		(q y (- z 1) (i t (p (s (str.at y z)) (+ z 1))))
))

(define-fun r ((y String) (w String)) Bool
	(exists ((u A))
		(and
			(= u (q y (- (str.len y) 1) d))
			(l u w)))
)

(declare-fun y () String)
(assert (= y


(declare-fun dummyflag () String)

(push)

(assert (= dummyflag "TSGLIVE{H4ve_y0u_tried_trie_ba5ed_encryp7ion?")) ; It will sat when you put correct flag.
(assert (r dummyflag y))

(check-sat)

(pop)

(push)

(assert (= dummyflag "TSGLIVE{H4ve_y0u_tried_trie_ba5ed_encryp7ion?X")) ; It will sat when you put correct flag.
(assert (r dummyflag y))

(check-sat)

(pop)

(push)

(assert (r flag y))

(check-sat)

(pop)
